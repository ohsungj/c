// 문제 : 배열을 훼손하는 change 함수를 만들어주세요.

#include <stdio.h>
#pragma warning(disable:4996)
// 여기서 change 함수를 구현해주세요.
// 아직 미완성된 상태입니다. 마저 구현해주세요.
void change(int * p) {
	*p = 200;
	*(p + 1) = 400;
}
int main(void) {
	int x[2];
	x[0] = 100;
	x[1] = 200;
	//int x[2] = {100, 200}; // 위 3 줄 코드의 같은 의미이다.

	printf("1change 함수를 호출하기 전, x[0] : %d, x[1] : %d\n", x[0], x[1]);

	// 여기서 change 함수를 실행해주세요.
	change(x);

	printf("change 함수를 호출하기 전, x[0] : %d, x[1] : %d\n", x[0], x[1]);
	// 출력 => change 함수를 호출하기 전, x[0] : 200, x[1] : 400

	return 0;
}




// 문제 : 배열을 훼손하는 change 함수를 만들어주세요.(배열의 포인터)

#include <stdio.h>

void change(int** num) {
	**num = 200;
	
}

int main(void) {
	int x[2] = { 100, 200 };
	// x : 배열변수
	// x의 값은 자동으로 x[0]의 주소값을 가진다.
	// x == &x[0]
	// x의 타입은 int* 이다.

	printf("change 함수를 호출하기 전, x[0] : %d, x[1] : %d\n", x[0], x[1]);

	int* p = x;
	change(&p);

	printf("change 함수를 호출하기 전, x[0] : %d, x[1] : %d\n", x[0], x[1]);
	// 출력 => change 함수를 호출하기 전, x[0] : 200, x[1] : 400

	return 0;
}

// 문제 : 문자배열을 만들고 거기에 문장 `abc`를 저장해주세요.
// 힌트 : c언어에서 모든 문장은 \0(널문자)로 끝나야 한다.

#include <stdio.h>

int main(void) {
	char arr[10];

	 //구현시작
	arr[0] = 'a';  //*(arr+0)='a' 와 같음
	arr[1] = 'b';
	arr[2] = 'c';
	arr[3] = '\0';
	
	

	// 구현끝

	printf("%c%c%c\n", arr[0], arr[1], arr[2]);
	// 출력 => abc

	// %s : 문장으로 출력한다.
	printf("%s\n", arr);
	// 출력 => abc

	// %s : 문장으로 출력한다.
	printf("%s\n", &arr[0]);
	// 출력 => abc

	return 0;
}


// 문장을 출력하는 함수(print_str)를 만들어주세요.(%s 사용 금지)
// 조건 : %s를 사용할 수 없다.

#include <stdio.h>
#define true 1
void print_str(char *str) {
    for (int i = 0; 1; i++) { //여기서 1은 무한반복
        if (*(str + i)=='\0') {
            break;
        }
        printf("%c",*(str+i));
    }
    printf("\n");
   
}
int main(void) {
    char str1[10];
    str1[0] = 'a';
    str1[1] = 'b';
    str1[2] = 'c';
    str1[3] = '\0';

    // print_str 함수를 활용하여 문장 str1 출력 실행
    print_str(str1);
    // 출력 => abc

    char str2[10];
    str2[0] = 'h';
    str2[1] = 'e';
    str2[2] = 'l';
    str2[3] = 'l';
    str2[4] = 'o';
    str2[5] = ' ';
    str2[6] = 'c';
    str2[7] = '\0';

    // print_str 함수를 활용하여 문장 str2 출력 실행
    print_str(str2);
    // 출력 => hello c

    return 0;
}
// 문제 : name1과 name2과 name3의 선언부분에서 총 몇바이트의 메모리를 사용하는지 설명해주세요.
// 힌트
// - 스택나라 : 지역변수들이 사는 나라
// - 공공재 나라 : 공유되는 자원들이 사는 나라

#include <stdio.h>
#include <string.h>

int main(void) {
  char* name1 = "abc";
  // name1 => 8바이트(스택 나라에 생성)//포인터 변수는 8바이트
  // "abc" => 4바이트(공공재 나라에 생성)
  // 총 12바이트 사용
  printf("name1 : %s\n", name1);

  char name2[10] = "bbc";
  // name2 => 8바이트(스택 나라에 생성)//포인터 변수는 8바이트
  // name2가 가리키는 배열의 크기 => 10바이트(스택 나라에 생성)
  // "bbc" => 4바이트(공공재 나라에 생성)
  // 총 22바이트

  printf("name2 : %s\n", name2);

  char name3[10] = "bbc";
  // name3 => 8바이트(스택 나라에 생성)//포인터 변수는 8바이트
  // name3가 가리키는 배열의 크기 => 10바이트
  // "bbc" => 0바이트(공공재 나라에 이미 "bbc" 문자배열이 있기 때문에, 여기서는 재활용)
  // 총 18바이트

  printf("name3 : %s\n", name3);

  return 0;
}